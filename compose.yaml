# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  # Frontend - Next.js aplikacja
  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
    environment:
      NODE_ENV: development
      # Dodaj URL do API backendu
      NEXT_PUBLIC_API_URL: http://backend:3001
    ports:
      - 3000:3000
    volumes:
      - ./front:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/.next
    depends_on:
      - backend
  
  # Backend API
  backend:
    build:
      context: ./back
      dockerfile: Dockerfile
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@db:5432/labelapp?schema=public
    ports:
      - 3001:3001
    volumes:
      - ./back:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      db:
        condition: service_healthy
        
  # Baza danych PostgreSQL
  db:
    image: postgres:16
    restart: always
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=labelapp
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db-data:
    driver: local

